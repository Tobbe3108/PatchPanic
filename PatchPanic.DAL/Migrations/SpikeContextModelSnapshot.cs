// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatchPanic.DAL;

namespace PatchPanic.DAL.Migrations
{
    [DbContext(typeof(SpikeContext))]
    partial class SpikeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PatchPanic.DAL.CategoriesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PatchPanic.DAL.CategoryFieldsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryId")
                        .HasColumnName("CategoryId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("TypeOf")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CategoryFields");
                });

            modelBuilder.Entity("PatchPanic.DAL.EntitiesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryId")
                        .HasColumnName("CategoryId");

                    b.Property<string>("LastCheckUp")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("PatchPanic.DAL.EntityDependenciesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("EntityId")
                        .HasColumnName("EntityId");

                    b.Property<Guid>("ParentId")
                        .HasColumnName("ParentId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("EntityDependencies");
                });

            modelBuilder.Entity("PatchPanic.DAL.EntityEntriesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryFieldId")
                        .HasColumnName("CategoryFieldId");

                    b.Property<Guid>("EntityId")
                        .HasColumnName("EntityId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("EntityEntries");
                });

            modelBuilder.Entity("PatchPanic.DAL.TasksModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AssignedToId")
                        .HasColumnName("AssignedToId");

                    b.Property<byte>("Completed");

                    b.Property<Guid>("CreatedById")
                        .HasColumnName("CreatedById");

                    b.Property<string>("Deadline")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("EntityId")
                        .HasColumnName("EntityId");

                    b.Property<string>("Headline")
                        .IsRequired();

                    b.Property<int>("RecurringInterval");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
